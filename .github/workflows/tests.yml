name: Tests
on:
  pull_request:
  push:
    branches:
      - master
      - release-*

env:
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: full
  CARGO_INCREMENTAL: 0
  RUSTUP_MAX_RETRIES: 10
  CARGO_NET_RETRY: 10

jobs:
  test:
    name: Tests
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        rust:
          - "stable"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Code-style
        run: cargo fmt -- --check

      - name: Tests
        run: cargo test --all --tests --no-fail-fast -- --test-threads=4 --nocapture

      - name: Clippy
        run: cargo clippy --examples -- -Dwarnings

  build:
    name: Build
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        rust:
          - "nightly-2020-10-05"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: wasm32-unknown-unknown

      - name: Build WASM -std
        run: |
          cd mvm
          cargo build --package mvm --target wasm32-unknown-unknown --no-default-features

      - name: Build with +std
        run: |
          cd mvm
          cargo build --package mvm --no-default-features --features="std"

  coverage:
    name: "Coverage"
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    env:
      SKIP_WASM_BUILD: 1
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: cargo clean
        run: cargo clean

      - name: get latest grcov binary
        uses: dsaltares/fetch-gh-release-asset@0.0.5
        with:
          repo: mozilla/grcov
          version: "latest"
          file: grcov-linux-x86_64.tar.bz2

      - name: unpack grcov release binary
        run: |
          tar -xvf grcov-linux-x86_64.tar.bz2
          sudo chown runner ./grcov && chmod +x ./grcov
          cp grcov ~/.cargo/bin/grcov
          rm grcov-linux-x86_64.tar.bz2

      - name: cargo build tests +profile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --no-fail-fast --exclude=bcs

      - id: coverage
        name: coverage analysis with grcov
        uses: actions-rs/grcov@v0.1
        with:
          config: .github/grcov.yml

      - name: make report artifact
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: ${{ steps.coverage.outputs.report }}

      - name: upload report to Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
